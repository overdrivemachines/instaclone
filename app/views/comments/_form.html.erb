<%# New/Edit Comment form partial. Used by posts/_post.html.erb partial %>
<%# data-controller="comment" will cause the connect() in comment_controller.js to execute %>
<%= form_with(model: [post, comment], class: "comment-form", id: "#{dom_id(comment, dom_id(post))}_form", data: {controller: "comment", "comment-target": "commentForm"}) do |form| %>
  <% if comment.errors.any? %>
    <div class="text-danger mb-2" id="<%= dom_id(post) %>_text_danger">
      Comment <%= comment.errors.full_messages.to_sentence %>
    </div>
  <% end %>
  <% if notice %>
    <div class="text-success mb-2" id="<%= dom_id(post) %>_text_success">
      <%= notice %>
    </div>
  <% end %>
  <%# Only for new comment form, add parent_id hidden field  %>
  <% if !comment.persisted? %>
    <%= form.hidden_field :parent_id, value: nil, id: "#{dom_id(comment, dom_id(post))}_parent_id" %>
  <% end %>
  <div class="form-body">
    <%# In comment_controller.js, the following text area is referred to as "this.txtareaTarget" %>
    <%# 1) resizeTextArea() is called each time the user types in the textarea  %>
    <%# 2) removeFlashMessages() is called whenever the textarea is focused %>
    <%= form.text_area :body, class: "form-control", id: "#{dom_id(comment, dom_id(post))}_body", data: { "comment-target": "txtarea" , action: "input->comment#resizeTextArea focus->comment#removeFlashMessages", "post-id": post.id} %>
    <%# form.text_area :body, class: "form-control" %>
    <%= form.submit "Post", class: "btn btn-instaclone" %>
  </div>
<% end %>
